#version 330 core

in vec3 NORMALS;
in vec2 UV;
in mat3 TBN;
in vec3 TangentLightPos;
in vec3 TangentFragPos;

uniform sampler2D rockwall_normal;
uniform sampler2D rockwall_diffuse;

/*system inputs
in vec4 gl_FragCoord;
in bool gl_FrontFacing;
in vec2 gl_PointCoord;
*/
out vec4 FragColor; // Output data

void main(){
  vec3 normal = normalize(NORMALS);
  normal = texture(rockwall_normal, UV).rgb;
  normal = normalize(normal * 2.0 - 1.0);

  vec3 color = texture(rockwall_diffuse, UV).rgb;
  vec3 ambient = 0.2*color;

  vec3 ligthDirection = TangentLightPos - TangentFragPos;

  float distance = length(TangentLightPos - TangentFragPos);
  float attenuation = 1.0 / (1.0 + 0.0000009 * distance + 0.0016 * (distance * distance)); 

  float diff = max(0.0, dot(normalize(normal), normalize(ligthDirection)));
  vec3 diffuse = diff * color;

  FragColor = vec4(diffuse*attenuation + ambient*attenuation, 1.0);
  FragColor.a = 1.0;
}